script src="http://d3js.org/d3.v3.min.js"
css:
  .node {
    stroke: #fff;
    stroke-width: 1.5px;
  }

  .link {
    stroke: #999;
    stroke-opacity: .6;
  }
.container
  = render partial: "layouts/navbar"
  .row
    .col-md-12 style="border:1px blue solid;"
      p below data is provided by controller
      #fg

    javascript:
      $.get('/data',function(graph){

        var width = 600,height = 400;

        var color = d3.scale.category20();

        var force = d3.layout.force()
                /*.charge(-120)
                .linkDistance(30)*/
                .linkStrength(0.7)
                .friction(0.7)
                .linkDistance(100)
                .chargeDistance(-500)
                .charge(-500)
                .gravity(0.1)/*0.1*/
                /*.theta(0.8)*/
                .alpha(0)
                .size([width, height]);

        var svg = d3.select("#fg").append("svg")
                .attr("width", width)
                .attr("height", height);

        force.nodes(graph.nodes)
                .links(graph.links)
                .start();

        var link = svg.selectAll(".link")
                .data(graph.links)
                .enter().append("line")
                .attr("class", "link")
                .style("stroke-width", 1)

        var node = svg.selectAll(".node")
                .data(graph.nodes)
                .enter().append("circle")
                .attr("class", "node")
                .attr({r: 20, opacity: 0.7})
                .style("fill", function (d) {
                  if(Math.random()> 0.5){
                    return "red";
                  } else{
                    return "green";
                  }
                })
                .call(force.drag);

        var label = svg.selectAll("text")
                .data(graph.nodes)
                .enter()
                .append("a")
                .attr("xlink:href",
                  function(d){return "http://"+location.host + location.pathname+ '?q='+ d.label})
                .append("text")
                .attr({"text-ancher": "middle", "fill": "black"})
                .style({"font-size": 14})
                .text(function (d) {
                  return d.label
                })
                .call(force.drag);


        force.on("tick", function () {
          link.attr("x1", function (d) {
            return d.source.x;
          })
                  .attr("y1", function (d) {
                    return d.source.y;
                  })
                  .attr("x2", function (d) {
                    return d.target.x;
                  })
                  .attr("y2", function (d) {
                    return d.target.y;
                  });

          node.attr("cx", function (d) {
                    return d.x;
                  })
                  .attr("cy", function (d) {
                    return d.y;
                  });
          label.attr({
            x: function (d) {
              return d.x - 7;
            },
            y: function (d) {
              return d.y + 7;
            }
          });
        });
      })


      /**
       var label = svg.selectAll("text")
       .data(graph.nodes)
       .enter()
       .append("text")
       .attr({"text-ancher": "middle", "fill": "black"})
       .style({"font-size": 14})
       .text(function (d) {
                        return d.label
                      })
       .call(force.drag);
       node.append("title")
       .text(function (d) {
                        return d.label
                      });
       */